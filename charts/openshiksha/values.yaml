# Default values for openshiksha.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
celeryWorkerCount: 1

image:
  repository: docker.pkg.github.com/openshiksha/openshiksha/openshiksha
  pullPolicy: Always
  cabinetRepository: docker.pkg.github.com/openshiksha/openshiksha-cabinet/openshiksha-cabinet

imagePullSecrets:
  - name: regcred

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 9878

ingress:
  enabled: true
  paths:
    - /

  # TLS settings
  tls: true
  secretName: ingress-tls
  acmeRegistrationEmail: socialsevainfra@gmail.com
  issuerName: "letsencrypt-prod"


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

env:
  contactPhone: "9762960587"
  salesPhone: "9762960587"

# subchart configurations
mysql:
  slave:
    replicas: 0
  root:
    forcePassword: true
  db:
    user: openshiksha_ap
    forcePassword: true
    name: openshiksha
  replication:
    forcePassword: true
  existingSecret: mysql-credentials

redis:
  cluster:
    slaveCount: 0
  existingSecret: redis-credentials
  existingSecretPasswordKey: redis-password
